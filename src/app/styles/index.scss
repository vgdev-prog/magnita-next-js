@use "sass:math";
@use "vendor/variables" as *;
@use "vendor/mixins" as *;
@use "vendor/null" as *;
//-----------------------------------/ Нормализация стилей /---------------------------------------


//-----------------------------------/ Mixins,Variables,Colors /---------------------------------------

//-----------------------------------/ Includes Libs /---------------------------------------
//-----------------------------------/ Fonts /---------------------------------------
//@import url(https://fonts.googleapis.com/css?family=Open+Sans:300,regular,500,600,700,800,300italic,italic,500italic,600italic,700italic,800italic);
//&display=swap - добавить при подключении через плагин

//-----------------------------------/ Обнуление и общие параметры /---------------------------------------
html.lock {
  // Скролл заблокирован
  body {
    overflow: hidden;
  }

}
body {
  // Сайт загружен
  .loaded & {
  }
}
// Оболочка ============================================================================================================================================================================================================================================================================================================================================================================================================================================
#wrapper {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  // Прижимаем footer
  > main {
    flex: 1 1 auto;
  }
  // Фикс для слайдеров
  > * {
    min-width: 0;
  }
}

body {
  //background-color: $mainBgColor;
  //color: $mainColor;
}
//-----------------------------------/ Оболочка /---------------------------------------

//root styles

//-----------------------------------/ Container /---------------------------------------

//(i) Стили будут применяться ко
//всем классам содержащим *__container
//Например header__container, main__container и т.д.

@if ($responsiveType==1) {
  // Отзывчивая
  [class*="__container"] {
    @if ($maxWidthContainer>0) {
      max-width: rem($maxWidthContainer);
      box-sizing: content-box;
      margin: 0 auto;
    }
    @if ($containerPadding>0) {
      padding: 0 rem(math.div($containerPadding, 2));
    }
  }
} @else {
  // По брейк-поинтам
  [class*="__container"] {
    margin: 0 auto;
    @if ($maxWidthContainer>0) {
      max-width: rem($maxWidthContainer);
      box-sizing: content-box;
    } @else {
      @if ($containerPadding>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
    @media (max-width: $pc) {
      max-width: rem(970);
    }
    @media (max-width: $tablet) {
      max-width: rem(750);
    }
    @media (max-width: $mobile) {
      max-width: none;
      @if ($containerPadding>0 and $maxWidthContainer>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
  }
}
